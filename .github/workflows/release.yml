name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
# 1️⃣ 先创建 Draft Release，拿到 release_id
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.cr.outputs.id }}
    steps:
      - uses: actions/checkout@v4

      - id: cr
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              tag_name: tag,
              name: `鲁迅日记 ${tag}`,
              draft: true,
              prerelease: false
            });
            return { id: data.id };

# 2️⃣ 按平台构建 & 上传产物
  build:
    needs: create-release
    runs-on: ${{ matrix.platform }}
    continue-on-error: ${{ matrix.allow_failure }}   # Windows 失败不阻塞
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: x86_64-apple-darwin
            os: macos
            allow_failure: false
          - platform: macos-latest
            target: aarch64-apple-darwin
            os: macos
            allow_failure: false
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            os: linux
            allow_failure: false
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            os: windows
            allow_failure: true     # 仅 Windows 允许失败

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install project deps
        run: pnpm install

      - name: Extra Linux packages
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev webkit2gtk-4.1-dev libappindicator3-dev \
            librsvg2-dev patchelf

      # 仅 Windows：临时生成 NSIS 专用配置，禁用 WiX
      - name: Prepare Windows NSIS config
        if: matrix.os == 'windows'
        shell: pwsh
        run: |
          $conf = @{
            bundle = @{
              windows = @{
                wix  = $null
                nsis = @{
                  template                = $null
                  languages               = @('English')
                  displayLanguageSelector = $true
                }
              }
            }
          } | ConvertTo-Json -Depth 10
          $conf | Out-File -FilePath src-tauri/tauri.windows.conf.json -Encoding UTF8

      - name: Build frontend
        run: pnpm build

      # Windows 构建
      - name: Build & upload (Windows)
        if: matrix.os == 'windows'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId:   ${{ needs.create-release.outputs.release_id }}
          tauriScript: pnpm tauri
          args: --config src-tauri/tauri.windows.conf.json --bundles nsis --target ${{ matrix.target }}

      # macOS / Linux 构建
      - name: Build & upload (non-Windows)
        if: matrix.os != 'windows'
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId:   ${{ needs.create-release.outputs.release_id }}
          tauriScript: pnpm tauri
          args: --target ${{ matrix.target }}

# 3️⃣ 全部构建结束后，把 Draft Release 发布出去
  publish-release:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    if: success() || needs.build.result == 'success'
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }},
              draft: false
            });
